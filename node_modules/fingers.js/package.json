{
  "name": "fingers.js",
  "title": "Fingers.js",
  "description": "A javascript library for synchronous touch gestures",
  "homepage": "https://github.com/paztis/fingers.js",
  "version": "1.0.5",
  "author": {
    "name": "Jérôme HENAFF",
    "email": "jerome.henaff@gmail.com"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt": ">=0.4.5",
    "grunt-contrib-concat": "0.4.x",
    "grunt-contrib-uglify": "0.4.x",
    "grunt-contrib-jshint": "0.10.x"
  },
  "gitHead": "a86acfac0b1aa6143548540a507665adf4e2ac93",
  "readme": "# Fingers.js\n\n#### A javascript library for simultaneous touch gestures\nFingers.js is a small javascript library that detects and fire gesture events on DOM objects.<br/>\nThis library detects __classical gestures__: Tap, Hold, Swipe, Pinch, Drag, Rotate, Scale.<br/>\nIt also detects __multiple gestures on different objects in the same time__.\n\n\n## Features\n- Light library (less than 4kb minified and gzipped)\n- Work with mouse devices (1 finger) and touch devices (multiple fingers)\n- Detect action gestures (Tap, MultipleTap, Hold, Swipe, Pinch) with as many number as you want\n- Detect movement gestures (Drag, Rotate, Scale)\n- Detect raw gestures (Fingers object managed)\n- __Multiple gestures in same time__ (You can drag 2 different objects, rotate a third and swipe a fourth in same time)\n- Easy to add your [custom gestures](/src/gestures/README.md).\n- AMD/CommonJS support\n\n\n## Usage\nFingers.js is simple to use. Just create an instance of Fingers on the wanted DOM object, then register the gestures you want.<br/>\n\n    var element = document.getElementById('el_id');\n    var fingers = new Fingers(element);\n    var gesture1 = fingers.addGesture(Fingers.gesture.Tap);\n    var gesture2 = fingers.addGesture(Fingers.gesture.Hold);\n\nGestures can have many handlers\n\n    var element = document.getElementById('el_id');\n    var fingers = new Fingers(element);\n    var gesture1 = fingers.addGesture(Fingers.gesture.Tap);\n    gesture1.addHandler(function(eventType, data, fingerList) {\n        alert('Tap 1');\n    });\n    gesture1.addHandler(function(eventType, data, fingerList) {\n        alert('Tap 2');\n    });\n\nGestures handling mathods are chainable\n\n    var element = document.getElementById('el_id');\n    new Fingers(element)\n        .addGesture(Fingers.gesture.Tap)\n        .addHandler(function(eventType, data, fingerList) {alert('Tap 1');})\n        .addHandler(function(eventType, data, fingerList) {alert('Tap 2');})\n        .addHandler(function(eventType, data, fingerList) {alert('Tap 3');});\n\n## Gesture\nThe following gestures are detected;\n\n- hold (1 .. N fingers)\n- tap (1 .. N fingers) and multiple taps (1 .. N successive taps)\n- swipe (1 .. N fingers)\n- Pinch (1 .. N fingers)\n- drag (1 finger)\n- rotate (2 fingers)\n- scale (2 fingers)\n- transform (rotate and scale) (2 fingers)\n- raw (each finger is seen independently)\n\nSee [custom gestures](/src/gestures/README.md) for gesture details.\n\n## Finger\nFinger object is accessible from Gesture events<br/>\nIt contains all the informations about the finger from its beginning until its end.\nIt provides informations about:\n- it time\n- its position\n- its moving direction\n- its moving velocity\n\nInformations are always available from Finger start or from Finger last move (ex: current velocity and average velocity)\n\n## Examples\nExamples are available in [/tests/manual folder](/tests/manual).\nTry if on PC (but only with on finger) or on a Smartphone / Tablet with all your fingers, then enjoy it.",
  "readmeFilename": "README.md",
  "_id": "fingers.js@1.0.5",
  "_shasum": "13193e7c60f749c4a7b3fce7a8af6fd9a3ca08d8",
  "_from": "git://github.com/paztis/fingers.js.git",
  "_resolved": "git://github.com/paztis/fingers.js.git#a86acfac0b1aa6143548540a507665adf4e2ac93"
}
